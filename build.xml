<?xml version="1.0" encoding="UTF-8"?>

<project name="name-of-project" default="build">
    <target name="build"
    depends="prepare,composer,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb"/>
    <target name="build-parallel"
            depends="prepare,composer,lint,tools-parallel,phpunit,phpcb"/>

    <target name="build-dev" depends="prepare,lint,phpcpd,phpunit" />

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="5">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/test/functional/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/vendor"/>
        <delete file="${basedir}/composer.lock"/>
        <delete file="${basedir}/composer.phar"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/test/functional/build/logs"/>
        <touch file="${basedir}/build/logs/paratest.log"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdoc"/>
    </target>

    <target name="composer" description="Installs and preps composer modules">
        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -sS https://getcomposer.org/installer | php"/>
        </exec>
        <exec executable="${basedir}/composer.phar" failonerror="true">
            <arg value="--quiet" />
            <arg value="install" />
        </exec>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>

            <fileset dir="${basedir}">
                <include name="**/*.php"/>
                <include name="**/*.phtml"/>
                <exclude name="**/vendor/**"/>
                <exclude name="**/test/**"/>
                <modified/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--exclude='vendor'"/>
            <arg value="--exclude='test'"/>
            <arg value="--log-csv"/>
            <arg value="${basedir}/build/logs/phploc.csv"/>
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
            <arg value="--ignore=vendor,test"/>
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg value="--exclude"/>
            <arg value="vendor,test"/>
            <arg value="--suffixes"/>
            <arg value="php"/>
            <arg path="${basedir}"/>
            <arg value="text"/>
            <arg value="${basedir}/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg value="--exclude"/>
            <arg value="vendor,test"/>
            <arg value="--suffixes"/>
            <arg value="php"/>
            <arg path="${basedir}"/>
            <arg value="xml"/>
            <arg value="${basedir}/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${basedir}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=PEAR"/>
            <arg value="--ignore=vendor,test"/>
            <arg value="--extensions=php"/>
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--standard=PEAR"/>
            <arg value="--ignore=vendor,test"/>
            <arg value="--extensions=php"/>
            <arg path="${basedir}"/>
            <redirector output="${basedir}/build/logs/checkstyle.xml" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--exclude=vendor"/>
            <arg value="--exclude=test"/>
            <arg value="--log-pmd"/>
            <arg value="${basedir}/build/logs/pmd-cpd.xml"/>
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpdox" description="Generate API documentation using phpDoc">
        <exec executable="phpdoc">
            <arg value="-t"/>
            <arg path="${basedir}/build/phpdoc" />
            <arg value="-d" />
            <arg path="${basedir}" />
            <arg value="--extensions=php" />
            <arg value="--ignore" />
            <arg value="test/,vendor/" />
            <arg value="--title=Rcm" />
            <arg value="--template=zend" />
        </exec>
    </target>

    <target name="paratest" description="Run unit tests with PHPUnit">
        <exec executable="vendor/bin/paratest" failonerror="true">
            <arg value="--phpunit='phpunit'"/>
            <arg value="--processes=10"/>
            <arg value="--log-junit=${basedir}/build/logs/junit.xml"/>
            <arg value="--coverage-clover=${basedir}/build/logs/clover.xml"/>
            <arg value="--coverage-html=${basedir}/build/coverage"/>
            <arg value="--configuration=${basedir}/phpunit.xml"/>
        </exec>

    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="true">
            <arg value="--log-junit=${basedir}/build/logs/junit.xml"/>
            <arg value="--coverage-clover=${basedir}/build/logs/clover.xml"/>
            <arg value="--coverage-html=${basedir}/build/coverage"/>
            <arg value="--configuration=${basedir}/phpunit.xml"/>
        </exec>

    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log"/>
            <arg path="${basedir}/build/logs"/>
            <arg value="--source"/>
            <arg path="${basedir}"/>
            <arg value="--ignore" />
            <arg value="build,vendor/,test/" />
            <arg value="--output"/>
            <arg path="${basedir}/build/code-browser"/>
        </exec>
    </target>
</project>
